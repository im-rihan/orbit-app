{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\orbit-master\\\\orbit-app\\\\src\\\\context\\\\FetchContext.js\";\nimport React, { createContext, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nconst FetchContext = createContext();\nconst {\n  Provider\n} = FetchContext;\n\nconst FetchProvider = ({\n  children\n}) => {\n  const authContext = useContext(AuthContext);\n  const authAxios = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n  });\n  authAxios.interceptors.request.use(config => {\n    config.headers.Authorization = `Bearer ${authContext.authState.token}`;\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  authAxios.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    const code = error && error.response ? error.response.status : 0;\n\n    if (code === 401 || code === 403) {\n      console.log('error code', code);\n    }\n\n    return Promise.reject(error);\n  });\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      authAxios\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, children);\n};\n\nexport { FetchContext, FetchProvider };","map":{"version":3,"sources":["D:/New folder/orbit-master/orbit-app/src/context/FetchContext.js"],"names":["React","createContext","useContext","axios","AuthContext","FetchContext","Provider","FetchProvider","children","authContext","authAxios","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","headers","Authorization","authState","token","error","Promise","reject","response","code","status","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvC,QAAMC,WAAW,GAAGP,UAAU,CAACE,WAAD,CAA9B;AAEA,QAAMM,SAAS,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC9BC,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADS,GAAb,CAAlB;AAIAL,EAAAA,SAAS,CAACM,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACCC,MAAM,IAAI;AACTA,IAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASZ,WAAW,CAACa,SAAZ,CAAsBC,KAAM,EAArE;AACA,WAAOJ,MAAP;AACA,GAJF,EAKCK,KAAK,IAAI;AACR,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,GAPF;AAUAd,EAAAA,SAAS,CAACM,YAAV,CAAuBW,QAAvB,CAAgCT,GAAhC,CACCS,QAAQ,IAAI;AACX,WAAOA,QAAP;AACA,GAHF,EAICH,KAAK,IAAI;AACR,UAAMI,IAAI,GACTJ,KAAK,IAAIA,KAAK,CAACG,QAAf,GAA0BH,KAAK,CAACG,QAAN,CAAeE,MAAzC,GAAkD,CADnD;;AAEA,QAAID,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAA7B,EAAkC;AACjCE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;AACA;;AACD,WAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,GAXF;AAcA,sBACC,oBAAC,QAAD;AACC,IAAA,KAAK,EAAE;AACNd,MAAAA;AADM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEF,QALF,CADD;AASA,CAxCD;;AA0CA,SAASH,YAAT,EAAuBE,aAAvB","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\n\nconst FetchContext = createContext();\nconst { Provider } = FetchContext;\n\nconst FetchProvider = ({ children }) => {\n\tconst authContext = useContext(AuthContext);\n\n\tconst authAxios = axios.create({\n\t\tbaseURL: process.env.REACT_APP_API_URL\n\t});\n\n\tauthAxios.interceptors.request.use(\n\t\tconfig => {\n\t\t\tconfig.headers.Authorization = `Bearer ${authContext.authState.token}`;\n\t\t\treturn config;\n\t\t},\n\t\terror => {\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t);\n\n\tauthAxios.interceptors.response.use(\n\t\tresponse => {\n\t\t\treturn response;\n\t\t},\n\t\terror => {\n\t\t\tconst code =\n\t\t\t\terror && error.response ? error.response.status : 0;\n\t\t\tif (code === 401 || code === 403) {\n\t\t\t\tconsole.log('error code', code);\n\t\t\t}\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t);\n\n\treturn (\n\t\t<Provider\n\t\t\tvalue={{\n\t\t\t\tauthAxios\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</Provider>\n\t);\n};\n\nexport { FetchContext, FetchProvider };\n"]},"metadata":{},"sourceType":"module"}