{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\orbit-master\\\\orbit-app\\\\src\\\\pages\\\\Settings.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport PageTitle from '../components/common/PageTitle';\nimport Card from './../components/common/Card';\nimport GradientButton from '../components/common/GradientButton';\nimport { Formik, Form, Field } from 'formik';\nimport { FetchContext } from './../context/FetchContext';\nimport FormError from './../components/FormError';\nimport FormSuccess from './../components/FormSuccess';\n\nconst Settings = () => {\n  const fetchContext = useContext(FetchContext);\n  const [bio, setBio] = useState();\n  const [successMessage, setSuccessMessage] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n  useEffect(() => {\n    const getBio = async () => {\n      try {\n        const {\n          data\n        } = await fetchContext.authAxios.get('bio');\n        setBio(data.bio);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getBio();\n  }, [fetchContext.authAxios]);\n\n  const saveBio = async bio => {\n    try {\n      const {\n        data\n      } = await fetchContext.authAxios.patch('bio', bio);\n      setErrorMessage(null);\n      setSuccessMessage(data.message);\n    } catch (err) {\n      const {\n        data\n      } = err.response;\n      setSuccessMessage(null);\n      setErrorMessage(data.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Fill Out Your Bio\"), successMessage && /*#__PURE__*/React.createElement(FormSuccess, {\n    text: successMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), errorMessage && /*#__PURE__*/React.createElement(FormError, {\n    text: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      bio\n    },\n    onSubmit: values => saveBio(values),\n    enableReinitialize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, () => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"border border-gray-300 rounded p-1 w-full h-56 mb-2\",\n    component: \"textarea\",\n    name: \"bio\",\n    placeholder: \"Your bio here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(GradientButton, {\n    text: \"Save\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Settings;","map":{"version":3,"sources":["D:/New folder/orbit-master/orbit-app/src/pages/Settings.js"],"names":["React","useContext","useState","useEffect","PageTitle","Card","GradientButton","Formik","Form","Field","FetchContext","FormError","FormSuccess","Settings","fetchContext","bio","setBio","successMessage","setSuccessMessage","errorMessage","setErrorMessage","getBio","data","authAxios","get","err","console","log","saveBio","patch","message","response","values"],"mappings":"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","sourcesContent":["import React, {\n  useContext,\n  useState,\n  useEffect\n} from 'react';\nimport PageTitle from '../components/common/PageTitle';\nimport Card from './../components/common/Card';\nimport GradientButton from '../components/common/GradientButton';\nimport { Formik, Form, Field } from 'formik';\nimport { FetchContext } from './../context/FetchContext';\nimport FormError from './../components/FormError';\nimport FormSuccess from './../components/FormSuccess';\n\nconst Settings = () => {\n  const fetchContext = useContext(FetchContext);\n  const [bio, setBio] = useState();\n  const [successMessage, setSuccessMessage] = useState();\n  const [errorMessage, setErrorMessage] = useState();\n\n  useEffect(() => {\n    const getBio = async () => {\n      try {\n        const { data } = await fetchContext.authAxios.get(\n          'bio'\n        );\n        setBio(data.bio);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getBio();\n  }, [fetchContext.authAxios]);\n\n  const saveBio = async bio => {\n    try {\n      const { data } = await fetchContext.authAxios.patch(\n        'bio',\n        bio\n      );\n      setErrorMessage(null);\n      setSuccessMessage(data.message);\n    } catch (err) {\n      const { data } = err.response;\n      setSuccessMessage(null);\n      setErrorMessage(data.message);\n    }\n  };\n  return (\n    <>\n      <PageTitle title=\"Settings\" />\n      <Card>\n        <h2 className=\"font-bold mb-2\">\n          Fill Out Your Bio\n        </h2>\n        {successMessage && (\n          <FormSuccess text={successMessage} />\n        )}\n        {errorMessage && <FormError text={errorMessage} />}\n        <Formik\n          initialValues={{\n            bio\n          }}\n          onSubmit={values => saveBio(values)}\n          enableReinitialize={true}\n        >\n          {() => (\n            <Form>\n              <Field\n                className=\"border border-gray-300 rounded p-1 w-full h-56 mb-2\"\n                component=\"textarea\"\n                name=\"bio\"\n                placeholder=\"Your bio here\"\n              />\n              <GradientButton text=\"Save\" type=\"submit\" />\n            </Form>\n          )}\n        </Formik>\n      </Card>\n    </>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}